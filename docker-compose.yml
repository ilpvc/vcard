version: '3.8'

services:
  # Node.js 后端服务
  server:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: node_server
    ports:
      - "3000:3000"  # 将 3000 端口映射到宿主机
    volumes:
      - ./server:/usr/src/app  # 将后端代码挂载到容器中
    environment:
      - NODE_ENV=production
      - DB_HOST=db  # 数据库地址，使用容器名 db
      - DB_PORT=3306  # MySQL 默认端口
      - DB_USER=root  # 数据库用户名
      - DB_PASSWORD=123456  # 数据库密码
      - DB_NAME=v-card  # 数据库名称
    networks:
      - app_network
    depends_on:
      - db  # 确保数据库先启动

  # MySQL 服务
  db:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: v-card
    volumes:
      - ./db/v-card.sql:/docker-entrypoint-initdb.d/v-card.sql  # 初始化数据库
    ports:
      - "3306:3306"  # 将数据库的 3306 端口映射到宿主机
    networks:
      - app_network

  # Nginx 前端服务
  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: vite_frontend
    ports:
      - "80:80"  # 将前端应用的 80 端口映射到宿主机
    networks:
      - app_network
    depends_on:
      - server  # 确保后端服务先启动

networks:
  app_network:
    driver: bridge
